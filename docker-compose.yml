version: '3.9'

services:
  # Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ms_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Satu Database untuk semua service
  mysql:
    image: mysql:8.0
    container_name: ms_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Microservices
  user-service:
    build:
      context: ./services/user-service/
      dockerfile: Dockerfile
    environment:  # âœ… BENAR: Di bawah nama service
      - PORT=3001
    depends_on:
      rabbitmq:
        condition: service_healthy 
      mysql:
        condition: service_healthy 

  product-service:
    build: ./services/product-service
    environment:
      - PORT=3002
      - RABBITMQ_URL=amqp://rabbitmq
      - SERVICE_NAME=product-service
      - DB_HOST=mysql
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=product_db
    ports: ["3002:3002"]
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy

  order-service:
    build: ./services/order-service
    environment:
      - PORT=3003
      - RABBITMQ_URL=amqp://rabbitmq
      - SERVICE_NAME=order-service
      - DB_HOST=mysql
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=order_db
    ports: ["3003:3003"]
    depends_on:
      rabbitmq:
        condition: service_healthy
      mysql:
        condition: service_healthy

volumes:
  mysql_data: